"""
Django settings for pavlov project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
CONF_DIR = os.getenv("PAVLOV_CONF_DIR", os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jxn1vb=bmksd=9k%krgd#1^jw0f^d5l@!qmlo&p=k+3w_ssh6b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Read database configuration from ../database.conf
# if it doesn't exist exit and print error.
def setup_from_conf_file(filename):
    try:
        with open(os.path.join(CONF_DIR, filename + ".dev"), 'r') as conf:
            file_conf = conf.read()
        print("Loaded conf file {} *DEV* version".format(filename))
        return eval(file_conf)

    except FileNotFoundError:
        try:
            with open(os.path.join(CONF_DIR, filename), 'r') as conf:
                file_conf = conf.read()
            return eval(file_conf)

        except FileNotFoundError:
            print("You have to create {} file".format(filename))
            exit(1)


ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'PVLV_posts.apps.PvlvPostsConfig',
    'PVLV_quotes.apps.PvlvQuotesConfig',
    'PVLV_secret_agency.apps.PvlvSecretAgencyConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pavlov.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pavlov.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

db = setup_from_conf_file('database.conf')
DATABASES = {
    'default': db
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# for allow requests from different domain
CORS_ORIGIN_ALLOW_ALL = True


LOGGING = setup_from_conf_file("logging.conf")


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('en-US', 'english'),
    ('it-IT', 'italian'),
]

TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATIC_URL = '/static/'

# default static files settings for PythonAnywhere.
# see https://help.pythonanywhere.com/pages/DjangoStaticFiles for more info
MEDIA_ROOT = u'/home/AbbestiaDC/pavlov/media'
MEDIA_URL = '/media/'
STATIC_ROOT = u'/home/AbbestiaDC/pavlov/static'
